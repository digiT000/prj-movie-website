datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
    schemas  = ["public"]

}
 
generator client {
  provider = "prisma-client-js"
    previewFeatures = ["multiSchema"]
}
 
model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  password      String?
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  watchlist     Watchlist[] // Add this line


 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

    @@schema("public")

}
 
model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@id([provider, providerAccountId])
      @@schema("public")
}
 
model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
      @@schema("public")
}
 
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@id([identifier, token])
  @@schema("public")
}

model Watchlist {
  id        String   @id @default(cuid())
  userId    String
  movieId   String   // TMDB movie ID
  title     String   // Movie title
  year      Int
  movieType   String 
  poster    String?  // Movie poster image (optional)
  addedAt   DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, movieId]) // Ensures a user can't add the same movie multiple times
  @@schema("public")
}
 

